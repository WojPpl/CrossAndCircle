{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/wojp/CrossAndCircle/src/packages/GameButton/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Styles from \"./styles\";\n\nconst GameButton = ({\n  label,\n  buttonClick,\n  positionX,\n  positionY,\n  player\n}) => {\n  _s();\n\n  const [move, setMove] = useState(false);\n  const [buttonFrozen, setButtonFrozen] = useState();\n\n  const chooseBorderStyle = () => {\n    let style;\n\n    switch (positionX) {\n      case 0:\n        if (positionY === 1) {\n          style = Styles.sideBorder;\n        } else {\n          style = Styles.noBorder;\n        }\n\n        break;\n\n      case 1:\n        if (positionY === 1) {\n          style = Styles.fullBorder;\n        } else {\n          style = Styles.horizontalBorder;\n        }\n\n        break;\n\n      case 2:\n        if (positionY === 1) {\n          style = Styles.sideBorder;\n        } else {\n          style = Styles.noBorder;\n        }\n\n        break;\n\n      default:\n        style = Styles.noBorder;\n        break;\n    }\n\n    console.log(style);\n    return style;\n  };\n\n  const handleOnClick = () => {\n    if ((buttonFrozen === null || buttonFrozen === void 0 ? void 0 : buttonFrozen.length) > 0) {\n      return;\n    }\n\n    setMove(true);\n    setButtonFrozen(player);\n    buttonClick(positionY);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: chooseBorderStyle(),\n    onClick: () => {\n      (buttonFrozen === null || buttonFrozen === void 0 ? void 0 : buttonFrozen.length) > 0 ? console.log(\"frozen\") : handleOnClick();\n    },\n    children: move ? buttonFrozen ? \"o\" : \"x\" : label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 13\n  }, this);\n};\n\n_s(GameButton, \"0WHmYR8Qun86fR4R31ScsO2ygv4=\");\n\n_c = GameButton;\nGameButton.propTypes = {\n  label: PropTypes.string\n};\nexport default GameButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameButton\");","map":{"version":3,"sources":["/home/wojp/CrossAndCircle/src/packages/GameButton/index.js"],"names":["React","useState","PropTypes","Styles","GameButton","label","buttonClick","positionX","positionY","player","move","setMove","buttonFrozen","setButtonFrozen","chooseBorderStyle","style","sideBorder","noBorder","fullBorder","horizontalBorder","console","log","handleOnClick","length","propTypes","string"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,WAAT;AAAsBC,EAAAA,SAAtB;AAAiCC,EAAAA,SAAjC;AAA4CC,EAAAA;AAA5C,CAAD,KAA0D;AAAA;;AACzE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,EAAhD;;AACA,QAAMa,iBAAiB,GAAG,MAAM;AAC5B,QAAIC,KAAJ;;AACA,YAAQR,SAAR;AACI,WAAK,CAAL;AACI,YAAGC,SAAS,KAAK,CAAjB,EAAqB;AACjBO,UAAAA,KAAK,GAAGZ,MAAM,CAACa,UAAf;AACH,SAFD,MAGK;AACDD,UAAAA,KAAK,GAAGZ,MAAM,CAACc,QAAf;AACH;;AACD;;AACJ,WAAK,CAAL;AACI,YAAGT,SAAS,KAAK,CAAjB,EAAqB;AACjBO,UAAAA,KAAK,GAAGZ,MAAM,CAACe,UAAf;AACH,SAFD,MAGK;AACDH,UAAAA,KAAK,GAAGZ,MAAM,CAACgB,gBAAf;AACH;;AACD;;AACJ,WAAK,CAAL;AACI,YAAGX,SAAS,KAAK,CAAjB,EAAqB;AACjBO,UAAAA,KAAK,GAAGZ,MAAM,CAACa,UAAf;AACH,SAFD,MAGK;AACDD,UAAAA,KAAK,GAAGZ,MAAM,CAACc,QAAf;AACH;;AACD;;AACJ;AACIF,QAAAA,KAAK,GAAGZ,MAAM,CAACc,QAAf;AACA;AA3BR;;AA6BAG,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACA,WAAOA,KAAP;AACH,GAjCD;;AAmCA,QAAMO,aAAa,GAAG,MAAM;AACxB,QAAI,CAAAV,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEW,MAAd,IAAuB,CAA3B,EAA8B;AAC1B;AACH;;AACDZ,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,IAAAA,eAAe,CAACJ,MAAD,CAAf;AACAH,IAAAA,WAAW,CAACE,SAAD,CAAX;AACH,GAPD;;AASA,sBAAQ;AAAK,IAAA,KAAK,EAAEM,iBAAiB,EAA7B;AAAiC,IAAA,OAAO,EAAE,MAAM;AAAC,OAAAF,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEW,MAAd,IAAuB,CAAvB,GACpDH,OAAO,CAACC,GAAR,CAAY,QAAZ,CADoD,GAC5BC,aAAa,EADe;AAExD,KAFO;AAAA,cAEJZ,IAAI,GAAGE,YAAY,GAAG,GAAH,GAAS,GAAxB,GAA8BP;AAF9B;AAAA;AAAA;AAAA;AAAA,UAAR;AAGH,CAlDD;;GAAMD,U;;KAAAA,U;AAqDNA,UAAU,CAACoB,SAAX,GAAuB;AACnBnB,EAAAA,KAAK,EAAEH,SAAS,CAACuB;AADE,CAAvB;AAIA,eAAerB,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Styles from \"./styles\";\n\nconst GameButton = ({ label, buttonClick, positionX, positionY, player }) => {\n    const [move, setMove] = useState(false);\n    const [buttonFrozen, setButtonFrozen] = useState();\n    const chooseBorderStyle = () => {\n        let style;\n        switch (positionX) {\n            case 0:\n                if(positionY === 1 ) {\n                    style = Styles.sideBorder;\n                }\n                else {\n                    style = Styles.noBorder;\n                }\n                break;\n            case 1:\n                if(positionY === 1 ) {\n                    style = Styles.fullBorder;\n                }\n                else {\n                    style = Styles.horizontalBorder;\n                }\n                break;\n            case 2:\n                if(positionY === 1 ) {\n                    style = Styles.sideBorder;\n                }\n                else {\n                    style = Styles.noBorder;\n                }\n                break;\n            default:\n                style = Styles.noBorder;\n                break;\n        }\n        console.log(style);\n        return style\n    }\n\n    const handleOnClick = () => {\n        if (buttonFrozen?.length > 0) {\n            return\n        }\n        setMove(true);\n        setButtonFrozen(player);\n        buttonClick(positionY)\n    }\n\n    return (<div style={chooseBorderStyle()} onClick={() => {buttonFrozen?.length > 0 ?\n         console.log(\"frozen\") : handleOnClick();\n    }}>{move ? buttonFrozen ? \"o\" : \"x\" : label }</div>)\n}\n\n\nGameButton.propTypes = {\n    label: PropTypes.string\n}\n\nexport default GameButton;\n\n"]},"metadata":{},"sourceType":"module"}