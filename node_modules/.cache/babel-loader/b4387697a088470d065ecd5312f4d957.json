{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/wojp/CrossAndCircle/src/packages/GameButton/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Styles from \"./styles\";\n\nconst GameButton = ({\n  buttonClick,\n  positionX,\n  positionY,\n  player,\n  aiMove\n}) => {\n  _s();\n\n  const [move, setMove] = useState(false);\n  const [buttonFrozen, setButtonFrozen] = useState();\n  useEffect(() => {\n    console.log(\"poszedł efekt\");\n    console.log(aiMove);\n\n    if ((aiMove === null || aiMove === void 0 ? void 0 : aiMove.x) === positionX && (aiMove === null || aiMove === void 0 ? void 0 : aiMove.y) === positionY) {\n      setMove(true);\n      setButtonFrozen(\"x\");\n    }\n  }, [aiMove]);\n\n  const chooseBorderStyle = () => {\n    let style;\n\n    switch (positionX) {\n      case 0:\n        if (positionY === 1) {\n          style = Styles.sideBorder;\n        } else {\n          style = Styles.noBorder;\n        }\n\n        break;\n\n      case 1:\n        if (positionY === 1) {\n          style = Styles.fullBorder;\n        } else {\n          style = Styles.horizontalBorder;\n        }\n\n        break;\n\n      case 2:\n        if (positionY === 1) {\n          style = Styles.sideBorder;\n        } else {\n          style = Styles.noBorder;\n        }\n\n        break;\n\n      default:\n        style = Styles.noBorder;\n        break;\n    }\n\n    return style;\n  };\n\n  const handleOnClick = () => {\n    setMove(true);\n    setButtonFrozen(player ? \"0\" : \"x\");\n    buttonClick({\n      positionY: positionY,\n      positionX: positionX,\n      player: player ? \"0\" : \"x\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: chooseBorderStyle(),\n    onClick: !buttonFrozen ? () => {\n      handleOnClick();\n    } : console.log(),\n    children: move ? buttonFrozen ? buttonFrozen : player ? \"o\" : \"x\" : \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 13\n  }, this);\n};\n\n_s(GameButton, \"8Ui9V3Tv00t1pkcilMLjYAcBKIY=\");\n\n_c = GameButton;\nGameButton.propTypes = {\n  positionX: PropTypes.number\n};\nexport default GameButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameButton\");","map":{"version":3,"sources":["/home/wojp/CrossAndCircle/src/packages/GameButton/index.js"],"names":["React","useState","useEffect","PropTypes","Styles","GameButton","buttonClick","positionX","positionY","player","aiMove","move","setMove","buttonFrozen","setButtonFrozen","console","log","x","y","chooseBorderStyle","style","sideBorder","noBorder","fullBorder","horizontalBorder","handleOnClick","propTypes","number"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,SAAf;AAA0BC,EAAAA,SAA1B;AAAqCC,EAAAA,MAArC;AAA6CC,EAAAA;AAA7C,CAAD,KAA2D;AAAA;;AAC1E,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,EAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;;AACA,QAAI,CAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEO,CAAR,MAAcV,SAAd,IAA2B,CAAAG,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEQ,CAAR,MAAcV,SAA7C,EAAwD;AACpDI,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,MAAAA,eAAe,CAAE,GAAF,CAAf;AACH;AACJ,GAPQ,EAON,CAACJ,MAAD,CAPM,CAAT;;AAQA,QAAMS,iBAAiB,GAAG,MAAM;AAC5B,QAAIC,KAAJ;;AACA,YAAQb,SAAR;AACI,WAAK,CAAL;AACI,YAAGC,SAAS,KAAK,CAAjB,EAAqB;AACjBY,UAAAA,KAAK,GAAGhB,MAAM,CAACiB,UAAf;AACH,SAFD,MAGK;AACDD,UAAAA,KAAK,GAAGhB,MAAM,CAACkB,QAAf;AACH;;AACD;;AACJ,WAAK,CAAL;AACI,YAAGd,SAAS,KAAK,CAAjB,EAAqB;AACjBY,UAAAA,KAAK,GAAGhB,MAAM,CAACmB,UAAf;AACH,SAFD,MAGK;AACDH,UAAAA,KAAK,GAAGhB,MAAM,CAACoB,gBAAf;AACH;;AACD;;AACJ,WAAK,CAAL;AACI,YAAGhB,SAAS,KAAK,CAAjB,EAAqB;AACjBY,UAAAA,KAAK,GAAGhB,MAAM,CAACiB,UAAf;AACH,SAFD,MAGK;AACDD,UAAAA,KAAK,GAAGhB,MAAM,CAACkB,QAAf;AACH;;AACD;;AACJ;AACIF,QAAAA,KAAK,GAAGhB,MAAM,CAACkB,QAAf;AACA;AA3BR;;AA6BA,WAAOF,KAAP;AACH,GAhCD;;AAkCA,QAAMK,aAAa,GAAG,MAAM;AACxBb,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,IAAAA,eAAe,CAACL,MAAM,GAAG,GAAH,GAAS,GAAhB,CAAf;AACAH,IAAAA,WAAW,CACP;AACIE,MAAAA,SAAS,EAAEA,SADf;AAEID,MAAAA,SAAS,EAAEA,SAFf;AAGIE,MAAAA,MAAM,EAAEA,MAAM,GAAG,GAAH,GAAS;AAH3B,KADO,CAAX;AAOH,GAVD;;AAYA,sBAAQ;AAAK,IAAA,KAAK,EAAEU,iBAAiB,EAA7B;AAAiC,IAAA,OAAO,EAAE,CAACN,YAAD,GAAgB,MAAM;AAACY,MAAAA,aAAa;AAAG,KAAvC,GAA0CV,OAAO,CAACC,GAAR,EAApF;AAAA,cAAoGL,IAAI,GAAGE,YAAY,GAAGA,YAAH,GAAkBJ,MAAM,GAAG,GAAH,GAAS,GAAhD,GAAsD;AAA9J;AAAA;AAAA;AAAA;AAAA,UAAR;AACH,CA3DD;;GAAMJ,U;;KAAAA,U;AA8DNA,UAAU,CAACqB,SAAX,GAAuB;AACnBnB,EAAAA,SAAS,EAAEJ,SAAS,CAACwB;AADF,CAAvB;AAIA,eAAetB,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Styles from \"./styles\";\n\nconst GameButton = ({ buttonClick, positionX, positionY, player, aiMove }) => {\n    const [move, setMove] = useState(false);\n    const [buttonFrozen, setButtonFrozen] = useState();\n\n    useEffect(() => {\n        console.log(\"poszedł efekt\");\n        console.log(aiMove);\n        if (aiMove?.x === positionX && aiMove?.y === positionY) {\n            setMove(true);\n            setButtonFrozen( \"x\");\n        }\n    }, [aiMove]);\n    const chooseBorderStyle = () => {\n        let style;\n        switch (positionX) {\n            case 0:\n                if(positionY === 1 ) {\n                    style = Styles.sideBorder;\n                }\n                else {\n                    style = Styles.noBorder;\n                }\n                break;\n            case 1:\n                if(positionY === 1 ) {\n                    style = Styles.fullBorder;\n                }\n                else {\n                    style = Styles.horizontalBorder;\n                }\n                break;\n            case 2:\n                if(positionY === 1 ) {\n                    style = Styles.sideBorder;\n                }\n                else {\n                    style = Styles.noBorder;\n                }\n                break;\n            default:\n                style = Styles.noBorder;\n                break;\n        }\n        return style\n    }\n\n    const handleOnClick = () => {\n        setMove(true);\n        setButtonFrozen(player ? \"0\" : \"x\");\n        buttonClick(\n            {\n                positionY: positionY,\n                positionX: positionX,\n                player: player ? \"0\" : \"x\"\n            }\n        )\n    }\n\n    return (<div style={chooseBorderStyle()} onClick={!buttonFrozen ? () => {handleOnClick()} : console.log()}>{move ? buttonFrozen ? buttonFrozen : player ? \"o\" : \"x\" : \"\" }</div>)\n}\n\n\nGameButton.propTypes = {\n    positionX: PropTypes.number\n}\n\nexport default GameButton;\n\n"]},"metadata":{},"sourceType":"module"}