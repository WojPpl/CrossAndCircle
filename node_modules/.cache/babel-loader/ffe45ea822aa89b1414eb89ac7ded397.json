{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/wojp/CrossAndCircle/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport './App.css';\nimport GameButton from \"./packages/GameButton\";\n\nconst App = () => {\n  _s();\n\n  const [isCircle, setIsCircle] = useState(true);\n  const [aiMoves, setAiMoves] = useState([]);\n\n  const createPositions = () => {\n    let board = [];\n\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 3; j++) {\n        board.push({\n          x: i,\n          y: j\n        });\n      }\n    }\n\n    return board;\n  };\n\n  const clickGameButton = data => {\n    if (!isCircle) {\n      let moves = [];\n      moves = aiMoves;\n      moves.push({\n        positionY: data.positionY,\n        positionX: data.positionX\n      });\n      setAiMoves(moves);\n    }\n\n    setIsCircle(!isCircle);\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: createPositions().map(singlePosition => /*#__PURE__*/_jsxDEV(GameButton, {\n      label: singlePosition.x + \"\" + singlePosition.y,\n      positionX: singlePosition.x,\n      positionY: singlePosition.y,\n      buttonClick: clickGameButton,\n      player: isCircle,\n      moves: aiMoves\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"CVfUG2kPsrvDP5/BE7EkmJHDDtU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/wojp/CrossAndCircle/src/App.js"],"names":["React","useState","GameButton","App","isCircle","setIsCircle","aiMoves","setAiMoves","createPositions","board","i","j","push","x","y","clickGameButton","data","moves","positionY","positionX","console","log","map","singlePosition"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,uBAAvB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMO,eAAe,GAAG,MAAM;AAC5B,QAAIC,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC5BF,QAAAA,KAAK,CAACG,IAAN,CAAW;AAACC,UAAAA,CAAC,EAAEH,CAAJ;AAAOI,UAAAA,CAAC,EAAEH;AAAV,SAAX;AACC;AACF;;AACD,WAAOF,KAAP;AACD,GARD;;AAWA,QAAMM,eAAe,GAAGC,IAAI,IAAI;AAC9B,QAAG,CAACZ,QAAJ,EAAc;AACZ,UAAIa,KAAK,GAAG,EAAZ;AACAA,MAAAA,KAAK,GAAGX,OAAR;AACAW,MAAAA,KAAK,CAACL,IAAN,CAAW;AAACM,QAAAA,SAAS,EAAEF,IAAI,CAACE,SAAjB;AAA4BC,QAAAA,SAAS,EAAEH,IAAI,CAACG;AAA5C,OAAX;AACAZ,MAAAA,UAAU,CAACU,KAAD,CAAV;AACD;;AACDZ,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACD,GATD;;AAWA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACGR,eAAe,GAAGc,GAAlB,CAAsBC,cAAc,iBACjC,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEA,cAAc,CAACV,CAAf,GAAmB,EAAnB,GAAwBU,cAAc,CAACT,CAA1D;AAA6D,MAAA,SAAS,EAAES,cAAc,CAACV,CAAvF;AACY,MAAA,SAAS,EAAEU,cAAc,CAACT,CADtC;AACyC,MAAA,WAAW,EAAEC,eADtD;AACuE,MAAA,MAAM,EAAEX,QAD/E;AACyF,MAAA,KAAK,EAAEE;AADhG;AAAA;AAAA;AAAA;AAAA,YADH;AADH;AAAA;AAAA;AAAA;AAAA,UADJ;AAOD,CAlCD;;GAAMH,G;;KAAAA,G;AAoCN,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport './App.css';\nimport GameButton from \"./packages/GameButton\";\n\nconst App = () => {\n\n  const [isCircle, setIsCircle] = useState(true);\n  const [aiMoves, setAiMoves] = useState([]);\n\n  const createPositions = () => {\n    let board = [];\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 3; j++) {\n      board.push({x: i, y: j})\n      }\n    }\n    return board\n  }\n\n\n  const clickGameButton = data => {\n    if(!isCircle) {\n      let moves = [];\n      moves = aiMoves;\n      moves.push({positionY: data.positionY, positionX: data.positionX})\n      setAiMoves(moves);\n    }\n    setIsCircle(!isCircle);\n    console.log(data)\n  }\n\n  return (\n      <div className=\"App\">\n        {createPositions().map(singlePosition => (\n            <GameButton label={singlePosition.x + \"\" + singlePosition.y} positionX={singlePosition.x}\n                        positionY={singlePosition.y} buttonClick={clickGameButton} player={isCircle} moves={aiMoves}/>))}\n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}